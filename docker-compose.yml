services:
  card-service:
    image: cardservice:0.0.1-SNAPSHOT
    ports:
      - "8080:8080"
    environment:
      OTEL_TRACES_EXPORTER: zipkin, jaeger
      OTEL_METRICS_EXPORTER: prometheus
      OTEL_LOGS_EXPORTER: logging
      OTEL_EXPORTER_JAEGER_ENDPOINT: http://jaeger:14250
      OTEL_EXPORTER_ZIPKIN_ENDPOINT: http://zipkin:9411/api/v2/spans
      OTEL_EXPORTER_PROMETHEUS_HOST: 0.0.0.0
      OTEL_EXPORTER_PROMETHEUS_PORT: 9464
    depends_on:
      - postgres
      - jaeger-all-in-one
      - zipkin-all-in-one

  postgres:
    container_name: postgres
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_DB: opentelemetry
      POSTGRES_USER: username
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"

  jaeger-all-in-one:
    container_name: jaeger
    image: jaegertracing/all-in-one:latest
    environment:
      - COLLECTOR_OTLP_ENABLED=true
    restart: always
    ports:
      - "16686:16686"
      - "4317"

  zipkin-all-in-one:
    container_name: zipkin
    image: openzipkin/zipkin:latest
    restart: always
    ports:
      - "9411:9411"

  prometheus:
    container_name: prometheus
    image: prom/prometheus
    volumes:
      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - --config.file=/etc/prometheus/prometheus.yml
#      - --enable-feature=exemplar-storage
#      - --web.enable-remote-write-receiver
    restart: always
    ports:
      - '9090:9090'
    depends_on:
      - card-service

  grafana:
    container_name: grafana
    image: grafana/grafana
    volumes:
      - ./docker/grafana/grafana-datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml
    restart: always
    ports:
      - "3000:3000"
    depends_on:
      - prometheus